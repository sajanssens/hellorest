<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>hellorest</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>war</packaging>

    <properties>
        <!-- add to fix this error: Failed to execute goal org.apache.maven.plugins:maven-war-plugin:2.2:war (default-war) on project rest: Error assembling WAR: webxml attribute is required (or pre-existing WEB-INF/web.xml if executing in update mode) -->
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven.compiler.release>8</maven.compiler.release>
    </properties>

    <!--0.-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId> <!-- bom Bill of Material-->
                <version>1.5.0.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- use this when com.sun... classes not found : -->
        <dependency>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
            <version>1.6.0</version>
            <scope>system</scope>
            <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.10</version>
            <scope>provided</scope>
        </dependency>
        <!-- <dependency>
             <groupId>com.github.phillip-kruger</groupId>
             <artifactId>apiee-core</artifactId>
             <version>1.0.8</version>
         </dependency>-->

        <!-- 1. Arquillian JUnit integration framework (required at all times) -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 2. Arquillian container adapter for the target container-->
        <dependency>
            <groupId>io.openliberty.arquillian</groupId>
            <artifactId>arquillian-liberty-managed</artifactId>
            <version>1.0.6</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Logging: ******************************************** -->
        <!-- not needed when not using slf4j -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.11.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- JPA ******************************************** -->
        <!-- provided by hibernate:
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.4.14.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.19</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <!-- To run admincenter : -->
    <!-- Navigate to http://localhost:9080/adminCenter/ -->

    <!-- To generate and view swagger-ui:
         Package and deploy the war and start the appserver.
         Navigate to http://localhost:9080/<appname>/<apppath>/apiee/
                  ie http://localhost:9080/hellorest/<apppath>/apiee/
     -->
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- Run and verify ...IT.java-tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Download WebSphere Liberty to target directory and start it -->
            <!-- See test/resources/arquillian.xml and server.xml for configuration -->
            <plugin>
                <groupId>net.wasdev.wlp.maven.plugins</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <version>3.0.M1</version>
                <configuration>
                    <!-- Liberty server to run test against -->
                    <assemblyArtifact>
                        <groupId>io.openliberty</groupId>
                        <artifactId>openliberty-runtime</artifactId>
                        <version>19.0.0.10</version>
                        <type>zip</type>
                    </assemblyArtifact>
                    <configFile>src/test/resources/test-server.xml</configFile> <!-- Used to run Arquillian-->
                </configuration>
                <executions>
                    <!-- Create server for running the application AND Arquillian -->
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>create-server</goal>
                        </goals>
                    </execution>
                    <!-- Used for running the application, not for Arquillian-->
                    <execution>
                        <id>deploy-app</id>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <appArchive>${project.basedir}\target\${project.build.finalName}.war</appArchive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy libraries to WebSphere Liberty -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <!-- Copy database connectors during package phase for running the application AND Arquillian. -->
                    <!-- Bit overkill as they aren't used in all projects, but it keeps the configuration simpler. -->
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>copy-arquillian</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <artifactItems>
                        <artifactItem>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <type>jar</type>
                            <overWrite>false</overWrite>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources
                            </outputDirectory>
                            <destFileName>mysql.jar</destFileName>
                        </artifactItem>
                    </artifactItems>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>